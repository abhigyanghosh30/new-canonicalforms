version: "3"
silent: true

env: 
  FLASK_SECRET_KEY: insecure-key
  FLASK_SQLALCHEMY_DATABASE_URI: sqlite:///project.db

tasks:
  setup-python:
    desc: "Set up Python environment"
    cmds:
      - echo "Setting up Python environment..."
      - python3 -m venv .venv
      - .venv/bin/activate
      - pip install --upgrade pip
      - pip install -r requirements.txt
  setup-node:
    desc: "Set up Node.js environment"
    cmds:
      - echo "Setting up Node.js environment..."
      - yarn install
      - yarn watch-css
  default:
    desc: "Run the Flask application"
    deps: [setup-python, setup-node]
    cmds:
      - echo "Starting Flask application..."
      - flask run -p 8050 --debug
    
  docker-build-app:
    desc: "Build the Docker app image"
    cmds:
      - echo "Building Docker app image..."
      - docker build -t forms-canonical-com .  

  docker-run-app:
    desc: "Run the Docker app container"
    deps: [docker-build-app]
    cmds:
      - echo "Running Docker app container..."
      - docker run -it -p 8050:8050 -v $PWD:/srv -e FLASK_SECRET_KEY="insecure-key" -e POSTGRESQL_DB_CONNECT_STRING="sqlite:///project.db" forms-canonical-com bash -c "flask run --debug"
  
  docker-build-postgres:
    desc: "Build the Docker Postgres image"
    cmds:
      - echo "Building Docker Postgres image..."
      - docker pull postgres:latest
      - docker run --name postgres -e POSTGRES_HOST_AUTH_METHOD=trust -e POSTGRES_USER=user -e POSTGRES_PASSWORD=password -e POSTGRES_DB=mydatabase -p 5432:5432 -d postgres:latest

  docker-run-frontend:
    desc: "Run the Docker frontend container"
    cmds:
      - echo "Running Docker frontend container..."
      - docker build -t forms-canonical-com-frontend --target=css_build .
      - docker run -it -v $PWD:/srv forms-canonical-com-frontend bash -c "yarn watch-css"

  rock-pack:
    desc: "Build the Rock package"
    cmds:
      - echo "Building Rock package..."
      - rockcraft pack --verbose

  rock-push-image:
    desc: "Push the Rock image to the registry"
    deps: [rock-pack]
    sources:
      - forms-canonical-com*.rock
    cmds:
      - echo "Building Rock image..."
      - rockcraft.skopeo copy --insecure-policy oci-archive:forms-canonical-com_0.1_amd64.rock docker-daemon:forms-canonical-com:latest
  
  rock-start:
    desc: "Start the Rock container"
    deps: [rock-push-image]
    cmds:
      - echo "Starting Rock container..."
      - docker run --rm --name forms-canonical-com -p 8000:8000 -e FLASK_SECRET_KEY="insecure-key" -e FLASK_SQLALCHEMY_DATABASE_URI="sqlite:///project.db" forms-canonical-com:latest

  pebble-log:
    desc: "Show Pebble logs"
    cmds:
      - docker exec forms-canonical-com pebble logs